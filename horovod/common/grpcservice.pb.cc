// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcservice.proto

#include "grpcservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace grpcservice {
class AutobotJobNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutobotJobNode>
      _instance;
} _AutobotJobNode_default_instance_;
class ErrorCodeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorCodeReply>
      _instance;
} _ErrorCodeReply_default_instance_;
class ActionReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionReply>
      _instance;
} _ActionReply_default_instance_;
class URIReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<URIReply>
      _instance;
} _URIReply_default_instance_;
class NumOfRankReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NumOfRankReply>
      _instance;
} _NumOfRankReply_default_instance_;
}  // namespace grpcservice
namespace protobuf_grpcservice_2eproto {
static void InitDefaultsAutobotJobNode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcservice::_AutobotJobNode_default_instance_;
    new (ptr) ::grpcservice::AutobotJobNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcservice::AutobotJobNode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AutobotJobNode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAutobotJobNode}, {}};

static void InitDefaultsErrorCodeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcservice::_ErrorCodeReply_default_instance_;
    new (ptr) ::grpcservice::ErrorCodeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcservice::ErrorCodeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorCodeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorCodeReply}, {}};

static void InitDefaultsActionReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcservice::_ActionReply_default_instance_;
    new (ptr) ::grpcservice::ActionReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcservice::ActionReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionReply}, {}};

static void InitDefaultsURIReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcservice::_URIReply_default_instance_;
    new (ptr) ::grpcservice::URIReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcservice::URIReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_URIReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsURIReply}, {}};

static void InitDefaultsNumOfRankReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcservice::_NumOfRankReply_default_instance_;
    new (ptr) ::grpcservice::NumOfRankReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcservice::NumOfRankReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NumOfRankReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNumOfRankReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AutobotJobNode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorCodeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_URIReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NumOfRankReply.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::AutobotJobNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::AutobotJobNode, namespace__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::AutobotJobNode, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::AutobotJobNode, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::AutobotJobNode, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::ErrorCodeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::ErrorCodeReply, errorcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::ActionReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::ActionReply, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::ActionReply, nodelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::URIReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::URIReply, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::NumOfRankReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpcservice::NumOfRankReply, numofranks_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcservice::AutobotJobNode)},
  { 9, -1, sizeof(::grpcservice::ErrorCodeReply)},
  { 15, -1, sizeof(::grpcservice::ActionReply)},
  { 22, -1, sizeof(::grpcservice::URIReply)},
  { 28, -1, sizeof(::grpcservice::NumOfRankReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcservice::_AutobotJobNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcservice::_ErrorCodeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcservice::_ActionReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcservice::_URIReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpcservice::_NumOfRankReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "grpcservice.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021grpcservice.proto\022\013grpcservice\"L\n\016Auto"
      "botJobNode\022\021\n\tnamespace\030\001 \001(\t\022\014\n\004name\030\002 "
      "\001(\t\022\014\n\004rank\030\003 \001(\005\022\013\n\003uri\030\004 \001(\t\";\n\016ErrorC"
      "odeReply\022)\n\terrorCode\030\001 \001(\0162\026.grpcservic"
      "e.ErrorCode\"D\n\013ActionReply\022#\n\006action\030\001 \001"
      "(\0162\023.grpcservice.Action\022\020\n\010nodeList\030\002 \003("
      "\005\"\027\n\010URIReply\022\013\n\003uri\030\001 \001(\t\"$\n\016NumOfRankR"
      "eply\022\022\n\nnumOfRanks\030\001 \001(\005*O\n\tErrorCode\022\013\n"
      "\007SUCCESS\020\000\022\017\n\013FAILED_LOCK\020\001\022\n\n\006DB_ERR\020\002\022"
      "\r\n\tNOT_FOUND\020\003\022\t\n\005OTHER\020\004*S\n\006Action\022\016\n\nD"
      "O_NOTHING\020\000\022\022\n\016NEW_NODE_READY\020\001\022\024\n\020NUM_N"
      "ODE_REDUCED\020\002\022\017\n\013SHOULD_STOP\020\0032\313\003\n\017Autob"
      "otOperator\022J\n\014SetMasterURI\022\033.grpcservice"
      ".AutobotJobNode\032\033.grpcservice.ErrorCodeR"
      "eply\"\000\022D\n\014GetMasterURI\022\033.grpcservice.Aut"
      "obotJobNode\032\025.grpcservice.URIReply\"\000\022K\n\r"
      "GetNumOfRanks\022\033.grpcservice.AutobotJobNo"
      "de\032\033.grpcservice.NumOfRankReply\"\000\022D\n\tGet"
      "Action\022\033.grpcservice.AutobotJobNode\032\030.gr"
      "pcservice.ActionReply\"\000\022H\n\nGraphReady\022\033."
      "grpcservice.AutobotJobNode\032\033.grpcservice"
      ".ErrorCodeReply\"\000\022I\n\013ReadyToStop\022\033.grpcs"
      "ervice.AutobotJobNode\032\033.grpcservice.Erro"
      "rCodeReply\"\000B0\n\033io.grpc.examples.hellowo"
      "rldB\017HelloWorldProtoP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 990);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grpcservice.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_grpcservice_2eproto
namespace grpcservice {
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grpcservice_2eproto::file_level_enum_descriptors[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Action_descriptor() {
  protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grpcservice_2eproto::file_level_enum_descriptors[1];
}
bool Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AutobotJobNode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutobotJobNode::kNamespaceFieldNumber;
const int AutobotJobNode::kNameFieldNumber;
const int AutobotJobNode::kRankFieldNumber;
const int AutobotJobNode::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutobotJobNode::AutobotJobNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_grpcservice_2eproto::scc_info_AutobotJobNode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcservice.AutobotJobNode)
}
AutobotJobNode::AutobotJobNode(const AutobotJobNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_().size() > 0) {
    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:grpcservice.AutobotJobNode)
}

void AutobotJobNode::SharedCtor() {
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_ = 0;
}

AutobotJobNode::~AutobotJobNode() {
  // @@protoc_insertion_point(destructor:grpcservice.AutobotJobNode)
  SharedDtor();
}

void AutobotJobNode::SharedDtor() {
  namespace__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AutobotJobNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutobotJobNode::descriptor() {
  ::protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutobotJobNode& AutobotJobNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_grpcservice_2eproto::scc_info_AutobotJobNode.base);
  return *internal_default_instance();
}


void AutobotJobNode::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcservice.AutobotJobNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rank_ = 0;
  _internal_metadata_.Clear();
}

bool AutobotJobNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcservice.AutobotJobNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string namespace = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_().data(), static_cast<int>(this->namespace_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpcservice.AutobotJobNode.namespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpcservice.AutobotJobNode.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpcservice.AutobotJobNode.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcservice.AutobotJobNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcservice.AutobotJobNode)
  return false;
#undef DO_
}

void AutobotJobNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcservice.AutobotJobNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string namespace = 1;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.AutobotJobNode.namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->namespace_(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.AutobotJobNode.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 rank = 3;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank(), output);
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.AutobotJobNode.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcservice.AutobotJobNode)
}

::google::protobuf::uint8* AutobotJobNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcservice.AutobotJobNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string namespace = 1;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.AutobotJobNode.namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->namespace_(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.AutobotJobNode.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 rank = 3;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank(), target);
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.AutobotJobNode.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcservice.AutobotJobNode)
  return target;
}

size_t AutobotJobNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcservice.AutobotJobNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string namespace = 1;
  if (this->namespace_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // int32 rank = 3;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutobotJobNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcservice.AutobotJobNode)
  GOOGLE_DCHECK_NE(&from, this);
  const AutobotJobNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutobotJobNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcservice.AutobotJobNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcservice.AutobotJobNode)
    MergeFrom(*source);
  }
}

void AutobotJobNode::MergeFrom(const AutobotJobNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcservice.AutobotJobNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.namespace_().size() > 0) {

    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void AutobotJobNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcservice.AutobotJobNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutobotJobNode::CopyFrom(const AutobotJobNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcservice.AutobotJobNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutobotJobNode::IsInitialized() const {
  return true;
}

void AutobotJobNode::Swap(AutobotJobNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutobotJobNode::InternalSwap(AutobotJobNode* other) {
  using std::swap;
  namespace__.Swap(&other->namespace__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rank_, other->rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutobotJobNode::GetMetadata() const {
  protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorCodeReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorCodeReply::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorCodeReply::ErrorCodeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_grpcservice_2eproto::scc_info_ErrorCodeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcservice.ErrorCodeReply)
}
ErrorCodeReply::ErrorCodeReply(const ErrorCodeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:grpcservice.ErrorCodeReply)
}

void ErrorCodeReply::SharedCtor() {
  errorcode_ = 0;
}

ErrorCodeReply::~ErrorCodeReply() {
  // @@protoc_insertion_point(destructor:grpcservice.ErrorCodeReply)
  SharedDtor();
}

void ErrorCodeReply::SharedDtor() {
}

void ErrorCodeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorCodeReply::descriptor() {
  ::protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorCodeReply& ErrorCodeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_grpcservice_2eproto::scc_info_ErrorCodeReply.base);
  return *internal_default_instance();
}


void ErrorCodeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcservice.ErrorCodeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errorcode_ = 0;
  _internal_metadata_.Clear();
}

bool ErrorCodeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcservice.ErrorCodeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpcservice.ErrorCode errorCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errorcode(static_cast< ::grpcservice::ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcservice.ErrorCodeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcservice.ErrorCodeReply)
  return false;
#undef DO_
}

void ErrorCodeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcservice.ErrorCodeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcservice.ErrorCode errorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errorcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcservice.ErrorCodeReply)
}

::google::protobuf::uint8* ErrorCodeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcservice.ErrorCodeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcservice.ErrorCode errorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errorcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcservice.ErrorCodeReply)
  return target;
}

size_t ErrorCodeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcservice.ErrorCodeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpcservice.ErrorCode errorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errorcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorCodeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcservice.ErrorCodeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorCodeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorCodeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcservice.ErrorCodeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcservice.ErrorCodeReply)
    MergeFrom(*source);
  }
}

void ErrorCodeReply::MergeFrom(const ErrorCodeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcservice.ErrorCodeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void ErrorCodeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcservice.ErrorCodeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorCodeReply::CopyFrom(const ErrorCodeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcservice.ErrorCodeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorCodeReply::IsInitialized() const {
  return true;
}

void ErrorCodeReply::Swap(ErrorCodeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorCodeReply::InternalSwap(ErrorCodeReply* other) {
  using std::swap;
  swap(errorcode_, other->errorcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorCodeReply::GetMetadata() const {
  protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionReply::kActionFieldNumber;
const int ActionReply::kNodeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionReply::ActionReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_grpcservice_2eproto::scc_info_ActionReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcservice.ActionReply)
}
ActionReply::ActionReply(const ActionReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodelist_(from.nodelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:grpcservice.ActionReply)
}

void ActionReply::SharedCtor() {
  action_ = 0;
}

ActionReply::~ActionReply() {
  // @@protoc_insertion_point(destructor:grpcservice.ActionReply)
  SharedDtor();
}

void ActionReply::SharedDtor() {
}

void ActionReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionReply::descriptor() {
  ::protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionReply& ActionReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_grpcservice_2eproto::scc_info_ActionReply.base);
  return *internal_default_instance();
}


void ActionReply::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcservice.ActionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodelist_.Clear();
  action_ = 0;
  _internal_metadata_.Clear();
}

bool ActionReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcservice.ActionReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpcservice.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::grpcservice::Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 nodeList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nodelist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_nodelist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcservice.ActionReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcservice.ActionReply)
  return false;
#undef DO_
}

void ActionReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcservice.ActionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcservice.Action action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // repeated int32 nodeList = 2;
  if (this->nodelist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nodelist_cached_byte_size_));
  }
  for (int i = 0, n = this->nodelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nodelist(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcservice.ActionReply)
}

::google::protobuf::uint8* ActionReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcservice.ActionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcservice.Action action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // repeated int32 nodeList = 2;
  if (this->nodelist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nodelist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nodelist_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcservice.ActionReply)
  return target;
}

size_t ActionReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcservice.ActionReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 nodeList = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nodelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nodelist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .grpcservice.Action action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcservice.ActionReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcservice.ActionReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcservice.ActionReply)
    MergeFrom(*source);
  }
}

void ActionReply::MergeFrom(const ActionReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcservice.ActionReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodelist_.MergeFrom(from.nodelist_);
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void ActionReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcservice.ActionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionReply::CopyFrom(const ActionReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcservice.ActionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionReply::IsInitialized() const {
  return true;
}

void ActionReply::Swap(ActionReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionReply::InternalSwap(ActionReply* other) {
  using std::swap;
  nodelist_.InternalSwap(&other->nodelist_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionReply::GetMetadata() const {
  protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void URIReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int URIReply::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

URIReply::URIReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_grpcservice_2eproto::scc_info_URIReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcservice.URIReply)
}
URIReply::URIReply(const URIReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcservice.URIReply)
}

void URIReply::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

URIReply::~URIReply() {
  // @@protoc_insertion_point(destructor:grpcservice.URIReply)
  SharedDtor();
}

void URIReply::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void URIReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* URIReply::descriptor() {
  ::protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const URIReply& URIReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_grpcservice_2eproto::scc_info_URIReply.base);
  return *internal_default_instance();
}


void URIReply::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcservice.URIReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool URIReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcservice.URIReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpcservice.URIReply.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcservice.URIReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcservice.URIReply)
  return false;
#undef DO_
}

void URIReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcservice.URIReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.URIReply.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcservice.URIReply)
}

::google::protobuf::uint8* URIReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcservice.URIReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcservice.URIReply.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcservice.URIReply)
  return target;
}

size_t URIReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcservice.URIReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void URIReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcservice.URIReply)
  GOOGLE_DCHECK_NE(&from, this);
  const URIReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const URIReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcservice.URIReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcservice.URIReply)
    MergeFrom(*source);
  }
}

void URIReply::MergeFrom(const URIReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcservice.URIReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void URIReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcservice.URIReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void URIReply::CopyFrom(const URIReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcservice.URIReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool URIReply::IsInitialized() const {
  return true;
}

void URIReply::Swap(URIReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void URIReply::InternalSwap(URIReply* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata URIReply::GetMetadata() const {
  protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NumOfRankReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NumOfRankReply::kNumOfRanksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NumOfRankReply::NumOfRankReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_grpcservice_2eproto::scc_info_NumOfRankReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcservice.NumOfRankReply)
}
NumOfRankReply::NumOfRankReply(const NumOfRankReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  numofranks_ = from.numofranks_;
  // @@protoc_insertion_point(copy_constructor:grpcservice.NumOfRankReply)
}

void NumOfRankReply::SharedCtor() {
  numofranks_ = 0;
}

NumOfRankReply::~NumOfRankReply() {
  // @@protoc_insertion_point(destructor:grpcservice.NumOfRankReply)
  SharedDtor();
}

void NumOfRankReply::SharedDtor() {
}

void NumOfRankReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NumOfRankReply::descriptor() {
  ::protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NumOfRankReply& NumOfRankReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_grpcservice_2eproto::scc_info_NumOfRankReply.base);
  return *internal_default_instance();
}


void NumOfRankReply::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcservice.NumOfRankReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  numofranks_ = 0;
  _internal_metadata_.Clear();
}

bool NumOfRankReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcservice.NumOfRankReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 numOfRanks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numofranks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcservice.NumOfRankReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcservice.NumOfRankReply)
  return false;
#undef DO_
}

void NumOfRankReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcservice.NumOfRankReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 numOfRanks = 1;
  if (this->numofranks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->numofranks(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpcservice.NumOfRankReply)
}

::google::protobuf::uint8* NumOfRankReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcservice.NumOfRankReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 numOfRanks = 1;
  if (this->numofranks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->numofranks(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcservice.NumOfRankReply)
  return target;
}

size_t NumOfRankReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcservice.NumOfRankReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 numOfRanks = 1;
  if (this->numofranks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numofranks());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumOfRankReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcservice.NumOfRankReply)
  GOOGLE_DCHECK_NE(&from, this);
  const NumOfRankReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NumOfRankReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcservice.NumOfRankReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcservice.NumOfRankReply)
    MergeFrom(*source);
  }
}

void NumOfRankReply::MergeFrom(const NumOfRankReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcservice.NumOfRankReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.numofranks() != 0) {
    set_numofranks(from.numofranks());
  }
}

void NumOfRankReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcservice.NumOfRankReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumOfRankReply::CopyFrom(const NumOfRankReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcservice.NumOfRankReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumOfRankReply::IsInitialized() const {
  return true;
}

void NumOfRankReply::Swap(NumOfRankReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NumOfRankReply::InternalSwap(NumOfRankReply* other) {
  using std::swap;
  swap(numofranks_, other->numofranks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NumOfRankReply::GetMetadata() const {
  protobuf_grpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_grpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcservice
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcservice::AutobotJobNode* Arena::CreateMaybeMessage< ::grpcservice::AutobotJobNode >(Arena* arena) {
  return Arena::CreateInternal< ::grpcservice::AutobotJobNode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcservice::ErrorCodeReply* Arena::CreateMaybeMessage< ::grpcservice::ErrorCodeReply >(Arena* arena) {
  return Arena::CreateInternal< ::grpcservice::ErrorCodeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcservice::ActionReply* Arena::CreateMaybeMessage< ::grpcservice::ActionReply >(Arena* arena) {
  return Arena::CreateInternal< ::grpcservice::ActionReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcservice::URIReply* Arena::CreateMaybeMessage< ::grpcservice::URIReply >(Arena* arena) {
  return Arena::CreateInternal< ::grpcservice::URIReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::grpcservice::NumOfRankReply* Arena::CreateMaybeMessage< ::grpcservice::NumOfRankReply >(Arena* arena) {
  return Arena::CreateInternal< ::grpcservice::NumOfRankReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
